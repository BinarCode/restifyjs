_e6b‍.x([["default",()=>Collection]]);class Collection {
    constructor(items) {
        this.items = this.getArrayableItems(items);
    }

    static make(items) {
        return new this(items);
    }

    first(callback, $default = null) {
        if (typeof callback !== 'function') {
            if (Array.isArray(this.items) && this.items.length) {
                return this.items[0];
            }

            return $default;
        }

        const items = this.items.filter((item) => callback(item));

        if(items.length) {
            return items[0];
        }

        return $default;
    }

    getArrayableItems(items) {
        if (! items) {
            return [];
        }

        if (Array.isArray(items)) {
            return items;
        }

        return [items];
    }
}
